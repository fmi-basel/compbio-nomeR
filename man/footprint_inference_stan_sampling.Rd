% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/footprint_inference_stan_sampling.R
\name{footprint_inference_stan_sampling}
\alias{footprint_inference_stan_sampling}
\title{Bayesian inference of footprint abundance using STAN HMC algorithm}
\usage{
footprint_inference_stan_sampling(
  joint_freq_table,
  footprint_prior_diralphas = c(200, rep(1, 199)),
  bg_protect_prob = 0.01,
  ftp_protect_min = 0.6,
  ftp_protect_max = 0.9999,
  ftp_protect_mean = 0.95,
  ftp_protect_var = 0.01,
  nchains = 4,
  ncpu = 1L,
  rstan_control = list(max_treedepth = 15, adapt_delta = 0.9),
  ...
)
}
\arguments{
\item{joint_freq_table}{\code{data.frame} which must contain columns \code{S}, \code{N00},\code{N01},\code{N10},\code{N11}, 
where \code{S} represent spacings and \code{N00},\code{N01},\code{N10},\code{N11} are observed counts for 00, 01, 10 and 11 at spacing \code{S}.
This table can be obtained using function nomeR::count_joint_frequencies(...)}

\item{footprint_prior_diralphas}{vector containing parameters for dirichlet distribution which is used to model footprint abundances.
Default vector assumes that around 50\% of data is free of any footprints and all other footprint up-to 200bp have uninformative prior.}

\item{bg_protect_prob}{expected probability to observe 1 at a free position. In other words it is emission probability of background for 1.}

\item{ftp_protect_min}{minimum allowed value for footprint emission probability for 1.}

\item{ftp_protect_max}{maximum allowed value for footprint emission probability for 1.}

\item{ftp_protect_mean}{expected mean for footprint emission probability for 1.}

\item{ftp_protect_var}{expected variance for footprint emission probability for 1.}

\item{nchains}{number of markov chains to run.}

\item{ncpu}{number of CPUs to use.}

\item{rstan_control}{a list of tuning parameters for stan sampler algorithm.}

\item{...}{parameters for `rstan::sampling` function. Please check \code{?rstan::sampling}.

Emission probability for a footprint to observe 1 is one parameters 
apart from footprint abundances which will be inferred from the data.
It is modelled using truncated beta distribution which is parametrized by mean (ftp_protect_mean) and variance (ftp_protect_var).
Inequality ftp_protect_var < ftp_protect_mean * (1 - ftp_protect_mean) must hold for correct parameterization of beta distribution.}
}
\value{
functions returns S4 class \code{rstan::stanfit} representing the fitted results. Pleae check \code{?rstan::stanfit}.
}
\description{
This function uses Hamiltonian Monte Carlo and NUTS algorithms from rstan package for bayesian inference of footprint abundance using sampling from posterior distribution.
}

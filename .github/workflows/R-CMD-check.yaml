# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
  pull_request:
    branches: 
      - main
      - master
      - devel

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.bioc }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest, bioc: 'devel'}
          - {os: windows-latest, bioc: 'devel'}
          - {os: ubuntu-latest, bioc: 'devel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - name: Check out branch
        uses: actions/checkout@v4

      - name: Set up R and install BiocManager
        uses: grimbough/bioc-actions/setup-bioc@v1
        with:
          bioc-version: ${{ matrix.config.bioc }}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          cache: true
          cache-version: 1
        
      - name: Session info
        run: |
          install.packages("sessioninfo")
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Build, Install, Check
        id: build-install-check
        uses: grimbough/bioc-actions/build-install-check@v1

      - name: Upload install log if the build/install/check step fails
        if: always() && (steps.build-install-check.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: install-log
          path: |
            ${{ steps.build-install-check.outputs.install-log }}

      - name: Show testthat output (windows)
        if: always() && runner.os == 'Windows'
        run: |
            type ${{ steps.build-install-check.outputs.check-dir }}\tests\testthat.Rout
        shell: cmd

      - name: Show testthat output (non-windows)
        if: always() && runner.os != 'Windows'
        run: |
            cat ${{ steps.build-install-check.outputs.check-dir }}/tests/testthat.Rout
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-results
          path: ${{ steps.build-install-check.outputs.check-dir }}

      - name: Run BiocCheck
        uses: grimbough/bioc-actions/run-BiocCheck@v1
        with:
          arguments: '--no-check-bioc-views --no-check-bioc-help'
          error-on: 'never'

      - name: Test coverage
        if: matrix.config.os == 'macos-latest' && matrix.config.bioc == 'devel'
        run: |
          install.packages("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      # - name: Deploy
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/devel' && matrix.config.os == 'macos-latest'
      #   run: |
      #     R CMD INSTALL .
      #     Rscript -e "remotes::install_dev('pkgdown'); pkgdown::deploy_to_branch(new_process = FALSE)"
      #     